@startuml
/' --- 工厂模式 --- '/
package com.design.factory.creator #e5ffe5 {
    class Creator
    class ConcreteCreatorA
    class ConcreteCreatorB
}
package com.design.factory.product #ffebe5 {
    class Product
    class ConcreteProductA
    class ConcreteProductB
}
class Creator {
    +Product createProduct()
}
class ConcreteCreatorA {
    +ConcreteProductA createProduct()
}
class ConcreteCreatorB {
    +ConcreteProductB createProduct()
}
Creator <|-- ConcreteCreatorA
Creator <|-- ConcreteCreatorB

class Product{}
class ConcreteProductA{}
class ConcreteProductB{}

Product <|-- ConcreteProductA
Product <|-- ConcreteProductB

ConcreteProductA <.. ConcreteCreatorA
ConcreteProductB <.. ConcreteCreatorB

/' --- 抽象工厂模式 --- '/
package com.design.absfactory.factory #e5ffe5 {
    class AbstractFactory
    class ConcreteFactory
}
package com.design.absFactory.product #ffebe5 {
    class AbstractProduct
    class ConcreteProduct
}
class Client {}
class AbstractFactory {
    +AbstractProduct createProduct()
}
class ConcreteFactory {
    +ConcreteProduct createProduct()
}
ConcreteFactory --|> AbstractFactory
class AbstractProduct {}
class ConcreteProduct {}
ConcreteProduct --|> AbstractProduct
ConcreteFactory ..> ConcreteProduct
Client --> AbstractFactory
Client --> AbstractProduct

/' --- 工厂模式实践 --- '/
class AllAppsPresenter <<Client>> {
    -AllAppsFactory factory
    -List<AppInfo> appInfoData
    -AppStateListener listener
}
interface AllAppsInterface{
    void register()
    void unregister()
    List<AppInfo> getAllApps()
    AppInfo getAppInfoByPackageName(String packageName)
}
interface AppStateListener {
    void onAdded(String packageName)
    void onRemoved(String packageName)
    void onChanged(String packageName)
}
abstract class AllAppsFactory{
    #AppStateListener listener
}
class IceCreamAllAppsFactory {
    -void registerReceiver(BroadcastReceiver receiver, IntentFilter filter)
    -AppInfo transferToAppInfo(ResolveInfo resolveInfo)
}
class LollipopAllAppsFactory{
    -void registerCallback(AppStateCallback callback)
    -AppInfo transferToAppInfo(LauncherActivityInfo launcherActivityInfo)
}
class AppInfo{}
AllAppsFactory .right.|> AllAppsInterface
AllAppsPresenter -down-> AllAppsFactory
AllAppsPresenter -right-> AppInfo
AllAppsPresenter .down.> AppStateListener
IceCreamAllAppsFactory -up-|> AllAppsFactory
LollipopAllAppsFactory -up-|> AllAppsFactory
AllAppsFactory .left.> AppInfo
AllAppsFactory .left.> AppStateListener

@enduml
